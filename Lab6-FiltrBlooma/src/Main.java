import java.util.HashSet;
import java.util.Random;

public class Main {

    public static void main(String[] args) {

        //parametres
        int n = 100_000;  //number of elements
        int range = 100_000_000; //elements from range 0,range
        double factor = 20;
        int m = (int) Math.round(factor * n); //size of filter
        int k = 5; // number of hash functions

        Random random = new Random(0);
        BloomFilter bloomFilter = new BloomFilter(m, k,n,range);
        HashSet<Integer> set = new HashSet<>();

        //n random elements
        while(set.size() < n) {
            set.add(random.nextInt(range));
        }

        //add all to bloomfilter bitset vector
        for(int item : set) {
            bloomFilter.add(item);
        }

        int TP = 0, FP = 0, TN = 0, FN = 0;

        for(int i = 0; i < range; i++) {
            int value = i;
            Boolean containsBF = bloomFilter.contains(value); //check is it set in bloom's vector
            Boolean containsHS = set.contains(value); //check is it generated by me

            if(containsBF && containsHS) {
                TP++;
            } else if(!containsBF && !containsHS) {
                TN++;
            } else if(!containsBF && containsHS) {
                FN++;
            }  else if(containsBF && !containsHS) {
                FP++;
            }
        }

        System.out.println("TP = " + String.format("%6d", TP) + "\tTPR = " + String.format("%1.4f", (double) TP/ (double) n));
        System.out.println("TN = " + String.format("%6d", TN) + "\tTNR = " + String.format("%1.4f", (double) TN/ (double) (range-n)));
        System.out.println("FN = " + String.format("%6d", FN) + "\tFNR = " + String.format("%1.4f", (double) FN/ (double) (n)));
        System.out.println("FP = " + String.format("%6d", FP) + "\tFPR = " + String.format("%1.4f", (double) FP/ (double) (range-n)));
        System.out.println("Expected FPR = " + String.format("%1.6f", Math.pow(1.0 - Math.pow(Math.E, -(k*(double)n)/m),k)));
    }

}
